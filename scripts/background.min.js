var MAX_CONCURRENT_DOWNLOADS=5,numDownloading=0,numFinished=0,downloadIds=[],queue=[],n=1,dev={default:"#3333cc",active:"#3333cc",complete:"#3333cc"},prod={default:"#717171",active:"#ff0000",complete:"00cc00"},currentConfig=dev;function sendStats(){chrome.runtime.sendMessage({message:"stats",numDownloading:numDownloading,numQueued:queue.length,numFinished:numFinished})}function padNumber(n,l,p){for(var o="",i=n.toString().length;i<l;i++)o+=p;return o+=n.toString()}function timestamp(){var date=new Date;return padNumber(date.getFullYear(),4,"0")+padNumber(date.getMonth()+1,2,"0")+padNumber(date.getDate(),2,"0")+padNumber(date.getHours(),2,"0")+padNumber(date.getMinutes(),2,"0")+padNumber(date.getSeconds(),2,"0")}function extension(filename){try{var idx=filename.lastIndexOf(".");return idx<1?"":filename.substr(idx+1)}catch(err){return"download"}}function processQueue(){for(0===queue.length&&(n=1);queue.length>0&&numDownloading<MAX_CONCURRENT_DOWNLOADS;){try{var url=queue.pop(),filename=timestamp()+"-"+padNumber(n,4,"0")+"."+extension(url);numDownloading++,n++,chrome.downloads.download({url:url,filename:filename},function(downloadId){downloadIds.push(downloadId)})}catch(err){console.error(err)}var inFlight=queue.length;chrome.browserAction.setBadgeText({text:inFlight.toString()});var badgeBgColour=inFlight>0?currentConfig.active:currentConfig.complete;chrome.browserAction.setBadgeBackgroundColor({color:badgeBgColour})}sendStats()}chrome.runtime.onMessage.addListener(function(request,sender,sendResponse){if("getStats"==request.message&&sendStats(),"addToQueue"==request.message){queue=queue.concat(request.urls);try{processQueue()}catch(err){console.error(err)}}"clearDownloads"==request.message&&(numDownloading=0,numFinished=0,n=0,downloadIds=[],queue=[],sendStats())}),chrome.browserAction.setBadgeText({text:"0"}),chrome.browserAction.setBadgeBackgroundColor({color:currentConfig.default}),chrome.downloads.onChanged.addListener(function(downloadDelta){downloadIds.indexOf(downloadDelta.id)>=0&&null!=downloadDelta.state&&"in_progress"!=downloadDelta.state.current&&(downloadIds.splice(downloadIds.indexOf(downloadDelta.id),1),numDownloading--,numFinished++,processQueue()),sendStats()});
//# sourceMappingURL=background.min.js.map